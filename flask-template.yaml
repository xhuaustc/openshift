apiVersion: v1
kind: Template
labels:
  template: flask-template
message: |-
  Success Created Flask app.
metadata:
  name: flask-template
  annotations:
    description: Flask app template description
    iconClass: icon-python
    tags: python
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:slim-s2i
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: ${TRIGGER_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${TRIGGER_WEBHOOK_SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange:
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: ${{REPLICA_COUNT}}
    selector:
      app: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
      spec:
        containers:
        - image: Null
          imagePullPolicy: IfNotPresent
          name: flask-app-s2i
          ports:
          - containerPort: ${{SERVER_PORT}}
            protocol: TCP
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - flask-app-s2i
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: ${SERVER_PORT}-tcp
      port: ${{SERVER_PORT}}
      protocol: TCP
      targetPort: ${{SERVER_PORT}}
    selector:
      app: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${ROUTER_HOSTNAME}
    port:
      targetPort: ${SERVER_PORT}-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}
parameters:
  - name: APPLICATION_NAME
    description: The name for the application. The service will be named like the application.
    displayName: Application name
    value: flask-app

  - name: SOURCE_REPOSITORY_URL 
    displayName: Source Repository URL 
    description: The URL of the repository with your application source code 
    value: https://github.com/xhuaustc/openshift.git 
    required: true 

  - name: SOURCE_REPOSITORY_REF 
    displayName: Source Repository Ref 
    description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch 
    value: master
    required: true 

  - name: REPLICA_COUNT 
    displayName: Replica Count 
    description: The Count of Replica 
    value: "1"
    required: true 

  - name: SERVER_PORT 
    displayName: Service Port 
    description: The port of the flask application 
    value: "5000" 
    required: true 

  - name: ROUTER_HOSTNAME 
    displayName: Router Hostname 
    description: The hostname of the flask application 

  - name: TRIGGER_WEBHOOK_SECRET
    displayName: Trigger Webhook secret
    generate: expression
    from: '[A-Za-z0-9]{20}'
